
/*======================================================================================*/
/*                                  Package Definition                                  */
/*======================================================================================*/

package org.keylimebox.simplemq.web.controllers;

/*======================================================================================*/
/*                                       Imports                                        */
/*======================================================================================*/

import org.keylimebox.simplemq.integration.model.QueueStatus;
import org.keylimebox.simplemq.integration.services.MonitoringService;
import org.keylimebox.simplemq.integration.services.QueueService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

/*======================================================================================*/
/*                           Class Definition / Implementation                          */
/*======================================================================================*/
/*======================================================================================*/
/* CLASS:       StatusController                                                       */
/**
 * Provides status reports on the system in a Nagios format.
 * <p>
 * @author      etlweather
 * @since       Jan 3, 2015
 */
/*======================================================================================*/
@SuppressWarnings ("nls")
@RestController
@RequestMapping ("/status")
public class StatusController
{

    /*==================================================================================*/
    /*===================================            ===================================*/
    /*=================================== Attributes ===================================*/
    /*===================================            ===================================*/
    /*==================================================================================*/

    /*==================================================================================*/
    /* Protected Attributes                                                             */
    /*==================================================================================*/

    /*==================================================================================*/
    /* Private Attributes                                                               */
    /*==================================================================================*/

                /*======================================================================*/
                /* ATTRIBUTE: service                                                  */
                /**
                 * The service used to interact with the queues and subscribers.
                 */
                /*======================================================================*/
   @Autowired
   private QueueService             queueService;

                /*======================================================================*/
                /* ATTRIBUTE: monitoring                                                  */
                /**
                 * A service for monitoring.
                 */
                /*======================================================================*/
   @Autowired
   private MonitoringService        monitoring;

    /*==================================================================================*/
    /* Class Attributes                                                                 */
    /*==================================================================================*/
        /*==============================================================================*/
        /* Constants                                                                    */
        /*==============================================================================*/

        /*==============================================================================*/
        /* Variables                                                                    */
        /*==============================================================================*/

    /*==================================================================================*/
    /*===================================            ===================================*/
    /*=================================== Operations ===================================*/
    /*===================================            ===================================*/
    /*==================================================================================*/

    /*==================================================================================*/
    /* Static initializer                                                               */
    /*==================================================================================*/

    /*==================================================================================*/
    /* Constructors                                                                     */
    /*==================================================================================*/

    /*==================================================================================*/
    /* Attribute Get Operations                                                         */
    /*==================================================================================*/

    /*==================================================================================*/
    /* Attribute Set Operations                                                         */
    /*==================================================================================*/

    /*==================================================================================*/
    /* Private Operations                                                               */
    /*==================================================================================*/

    /*==================================================================================*/
    /* Protected Operations                                                             */
    /*==================================================================================*/

    /*==================================================================================*/
    /* Package Operations                                                               */
    /*==================================================================================*/

    /*==================================================================================*/
    /* Public Operations                                                                */
    /*==================================================================================*/

         /*=============================================================================*/
         /* OPERATION:   status                                                         */
         /**
          * Provides status report on the queue.
          * <p>
          * @param aQueueId
          * @return
          * <p>
          * @since Jan 3, 2015
          */
         /*=============================================================================*/
   @RequestMapping ("/queues/{queueId}")
   public String status (
                           @PathVariable ("queueId")
                           String aQueueId,
                           @RequestParam (value="subscriber", required=false)
                           String aSubscriberId,
                           @RequestParam ("minutes")
                           int    aNbrMinutes
                        )
   {
      QueueStatus myStatus;
      if (aSubscriberId != null) {
         myStatus = queueService.status (aQueueId, aSubscriberId);
      }
      else {
         myStatus = queueService.status (aQueueId);
      }

      return monitoring.toNagios (myStatus, aNbrMinutes);
   }

    /*==================================================================================*/
    /* Abstract Operations (definitions)                                                */
    /*==================================================================================*/

    /*==================================================================================*/
    /* Abstract Operations (implementations)                                            */
    /*==================================================================================*/

    /*==================================================================================*/
    /* Class (static) Operations                                                        */
    /*==================================================================================*/
}

// EOF  ReportsController.java
